var canvas = document.querySelector('canvas');

canvas.height = window.innerHeight;
canvas.width = 13/11 * canvas.height;

var t=canvas.height/11;

var c = canvas.getContext('2d');


var loc_car_x=6,loc_car_y=5;
var blockDoor = [];
var wallArray = [];
var bulletArray = [];
var enemyArray = [];
var timeout=0;
var firerate_timeout=0;



drawing = new Image();
drawing.src = "admiral.jpg"; 

char_sprite_still = new Image();
char_sprite_still.src = "char_spritesheet_still.png"; 

char_sprite_move = new Image();
char_sprite_move.src = "char_spritesheet_moving.png";

var room =[ //<--- a[w][x][y][z]
    [   //<--- w //left
            [   //<---x 
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], //<--- y,z
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [   
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], 
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'c', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'c', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', 1  , ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
        ],
        [ //up
                [   //<---x 
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], //<--- y,z
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [   
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], 
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', 1  , ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
        ],
        [ //right
                [   //<---x 
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], //<--- y,z
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [   
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], 
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', 'c', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', 'c', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', 1  , ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
        ],
        [ //down
                [   //<---x 
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], //<--- y,z
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [   
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'], 
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ],
            [
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', 1  , ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
        ]
];


function gameState(floor){
    
    this.floor=floor;
    this.mapRooms=0;
    this.mapArray=[
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ];
    this.mapRoomArray=[
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ];
    
    this.mapPosX=5;
    this.mapPosY=6;
    this.roomsArray_0=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_1=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_2=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_3=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_4=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_5=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_6=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_7=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_8=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_9=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_10=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_11=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_12=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_13=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', ' ', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
    this.roomsArray_14=[
        [   //first    v- third
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w'],  //second
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 1  , ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', ' ', ' ', ' ', ' ', ' ', 'c', ' ', ' ', ' ', ' ', ' ', 'w'],
                ['w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w']
            ]
    ];
}

var gamestate=new gameState(0);

generateMap();
generateMapRooms();
console.log(gamestate.mapArray);
console.log(gamestate.mapRoomArray)
function generateMapRooms() {
    var up, down, left, right;
    for (var i = 0; i <= gamestate.mapArray.length - 2; i++) {
        for (var j = 0; j <= gamestate.mapArray[i].length - 2; j++) {
            if (gamestate.mapArray[i][j] == 1) {
                if (gamestate.mapArray[i - 1][j] == 1) {
                    up = 1;
                } else {
                    up = 0;
                }
                if (gamestate.mapArray[i + 1][j] == 1) {
                    down = 1;
                } else {
                    down = 0;
                }
                if (gamestate.mapArray[i][j + 1] == 1) {
                    right = 1;
                } else {
                    right = 0;
                }
                if (gamestate.mapArray[i][j - 1] == 1) {
                    left = 1;
                } else {
                    left = 0;
                }
                if (left == 1 && right == 1 && up == 1 && down == 1) {
                    gamestate.mapRoomArray[i][j] = gamestate.roomsArray_0[0];
                } else {
                    if (left == 1 && right == 0 && up == 1 && down == 1) {
                        gamestate.mapRoomArray[i][j] = gamestate.roomsArray_1[0];
                    } else {
                        if (left == 1 && right == 1 && up == 1 && down == 0) {
                            gamestate.mapRoomArray[i][j] = gamestate.roomsArray_2[0];
                        } else {
                            if (left == 0 && right == 1 && up == 1 && down == 1) {
                                gamestate.mapRoomArray[i][j] = gamestate.roomsArray_3[0];
                            } else {
                                if (left == 1 && right == 1 && up == 0 && down == 1) {
                                    gamestate.mapRoomArray[i][j] = gamestate.roomsArray_4[0];
                                } else {
                                    if (left == 0 && right == 0 && up == 1 && down == 1) {
                                        gamestate.mapRoomArray[i][j] = gamestate.roomsArray_5[0];
                                    } else {
                                        if (left == 1 && right == 1 && up == 0 && down == 0) {
                                            gamestate.mapRoomArray[i][j] = gamestate.roomsArray_6[0];
                                        } else {
                                            if (left == 0 && right == 1 && up == 1 && down == 0) {
                                                gamestate.mapRoomArray[i][j] = gamestate.roomsArray_7[0];
                                            } else {
                                                if (left == 1 && right == 0 && up == 1 && down == 0) {
                                                    gamestate.mapRoomArray[i][j] = gamestate.roomsArray_8[0];
                                                } else {
                                                    if (left == 0 && right == 1 && up == 0 && down == 1) {
                                                        gamestate.mapRoomArray[i][j] = gamestate.roomsArray_9[0];
                                                    } else {
                                                        if (left == 1 && right == 0 && up == 0 && down == 1) {
                                                            gamestate.mapRoomArray[i][j] = gamestate.roomsArray_10[0];
                                                        } else {
                                                            if (left == 0 && right == 1 && up == 0 && down == 0) {
                                                                gamestate.mapRoomArray[i][j] = gamestate.roomsArray_11[0];
                                                            } else {
                                                                if (left == 0 && right == 0 && up == 1 && down == 0) {
                                                                    gamestate.mapRoomArray[i][j] = gamestate.roomsArray_12[0];
                                                                } else {
                                                                    if (left == 0 && right == 0 && up == 0 && down == 1) {
                                                                        gamestate.mapRoomArray[i][j] = gamestate.roomsArray_13[0];
                                                                    } else {
                                                                        if (left == 1 && right == 0 && up == 0 && down == 0) {
                                                                            gamestate.mapRoomArray[i][j] = gamestate.roomsArray_14[0];
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                };
            }
        }
    }

}
function generateMap()
{
    while(gamestate.mapRooms < 10)
        {
            for(var i=0;i<=gamestate.mapArray.length-2;i++)
                {
                    for(var j=0;j<=gamestate.mapArray[i].length-2;j++)
                        {
                            if(gamestate.mapArray[i][j] != 0)
                                {   
                                    if(Math.random()>0.75 && gamestate.mapArray[i-1][j]==0 && gamestate.mapArray[i-1][j-1]==0 && gamestate.mapArray[i-1][j+1]==0)
                                        {
                                            gamestate.mapArray[i-1][j]=1;
                                            gamestate.mapRooms++;
                                            
                                        }
                                    if(Math.random()>0.75 && gamestate.mapArray[i][j+1]==0 && gamestate.mapArray[i-1][j+1]==0 && gamestate.mapArray[i+1][j+1]==0)
                                        {
                                            gamestate.mapArray[i][j+1]=1;
                                            gamestate.mapRooms++;
                                            
                                        }
                                    if(Math.random()>0.75 && gamestate.mapArray[i+1][j]==0 && gamestate.mapArray[i+1][j-1]==0 && gamestate.mapArray[i+1][j+1]==0)
                                        {
                                            gamestate.mapArray[i+1][j]=1;
                                            gamestate.mapRooms++;
                                           
                                        }
                                    if(Math.random()>0.75 && gamestate.mapArray[i][j-1]==0 && gamestate.mapArray[i-1][j-1]==0 && gamestate.mapArray[i+1][j-1]==0)
                                        {
                                            gamestate.mapArray[i][j-1]=1;
                                            gamestate.mapRooms++;
                                            
                                        }
                                }
                        }
                }
                
        }
}

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}



function intersection(x1,y1,w1,h1,x2,y2,w2,h2)
{
    w2=w2+x2;
    w1=w1+x1;
    
    if(x2>x1 || x1>w2)
        {
            return false;
        }
    
    h2=h2+y2;
    h1=h1+y1;
    
    if(y2>h1 || y1>h2)
        {
            return false;
        }
    return true;
    
    
}

function Wall(x,y,w)
{
    this.x=x;
    this.y=y;
    this.w=w;
    
    this.draw=function(){
        c.beginPath();
        c.rect(this.x,this.y,this.w,this.w);
        c.fillStyle='blue';
        c.fill();
    }
    this.remove= function(){
        var z=blockDoor.indexOf(this);
        blockDoor.splice(z,1);
    }
    
}
var currentRoom=[];
function newRoom(w,x,y){
    
    currentRoom=gamestate.mapRoomArray[x][y];
     wallArray=[];
    for(var i=0;i<=currentRoom.length-1;i++)
    {
        for (var j=0;j<=currentRoom[0].length-1;j++)
            {
              
                if(currentRoom[i][j]=='c')
                    {
                        currentRoom[i][j]=' ';
                    }
            }
    }
    console.log(currentRoom);
    caracter.x=loc_car_x*t;
    caracter.y=loc_car_y*t;
    arma.x=caracter.x+caracter.r/2;
    arma.y=caracter.y+caracter.r/2;
    for(var i=0;i<=currentRoom.length-1;i++)
    {
        for (var j=0;j<=currentRoom[0].length-1;j++)
            {
                if(currentRoom[i][j]=='w')
                    {
                        wallArray.push(new Wall(t*j,t*i,t));
                    }
                
                if(typeof currentRoom[i][j] == 'number')
                    {
                        enemyArray.push(new Enemy(j*t,i*t,currentRoom[i][j]));
                        
                    }
            }
    }
    bulletArray=[];

}

function bDoor(x,y,w)
{
    this.x=x;
    this.y=y;
    this.w=w;
    
    this.draw=function(){
        c.beginPath();
        c.rect(this.x,this.y,this.w,this.w);
        c.fillStyle='pink';
        c.fill();
    }
  
    
}


function Enemy(x,y,id)
{
    this.x=x;
    this.y=y;
     switch (id)
     {
         case 1:
             this.w=150;
             this.h=90;
             this.v=1;
             this.hp=5;
             console.log(typeof(this))
             
             this.draw = function()
             {
                 c.beginPath();
                 c.rect(this.x,this.y,this.w,this.h);
                 c.fillStyle='white';
                 c.fill();
             }
             
             this.update = function()
             {
                 if (this.x>caracter.x)
                 {
                     this.x -= this.v;
                 }else {
                     this.x += this.v;
                 }
                 if(this.y>caracter.y)
                 {
                    this.y -= this.v;
                 }else {
                    this.y += this.v;
                 }
             }
             break;
        }
    this.remove= function(){
        var z=enemyArray.indexOf(this);
        enemyArray.splice(z,1);
    }
             
     }




function Bullet(x,y,v,r,mx,my){
    var adaos_x;
    var adaos_y;
    this.x=x;
    this.y=y;
    this.v=v;
    this.r=r;
    this.mx=mx;
    this.my=my;
    this.angle=Math.atan(Math.abs(this.y-this.my)/Math.abs(this.x-this.mx));
    this.angleRad=this.angle*(Math.PI/180);
    if(this.mx>this.x){
            
            adaos_x= this.v * Math.cos(this.angle);
           
        }
        if(this.my>this.y){
           
            adaos_y= this.v * Math.sin(this.angle);
        }
        if(this.mx<this.x){
            
            adaos_x= -this.v * Math.cos(this.angle);
        }
        if(this.my<this.y){
            
            adaos_y= -this.v * Math.sin(this.angle);
        }
    this.x += adaos_x;
    this.y += adaos_y;
    this.draw = function(){
        c.beginPath();
        c.arc(this.x,this.y,this.r,0,Math.PI*2,0);
        c.fillStyle='lime';
        c.fill();
    }
    this.update = function () {
        
        console.log(this.v);
        if (this.x < canvas.width && this.x > 0 && this.y < canvas.height && this.y > 0) {
            this.x += adaos_x;
            this.y += adaos_y;
            
        }else this.remove();
    }
    this.remove= function(){
        var z=bulletArray.indexOf(this);
        bulletArray.splice(z,1);
    }
    
    
}

function Mouse(){
    this.x=innerWidth/2;
    this.y=innerHeight/2;
}

function Caracter(x,y,v,w,h)
{
    this.x=x;
    this.y=y;
    this.v=v;
    this.w=w;
    this.h=h;
    this.hp=5;
    this.invincibility=1000;
    this.firerate=300;
    var wall_collision_w=0;
    var wall_collision_a=0;
    var wall_collision_s=0;
    var wall_collision_d=0;
    var char_frame=0;
    var char_frame_switch = 1;
    var char_frame_2=0;
    var char_frame_switch_2 = 1;
    this.draw = function () {
        if (keys['w'] == true || keys['s'] == true || keys['a'] == true || keys['d'] == true) {
            c.beginPath();
            c.drawImage(char_sprite_move, char_frame_2 * 133, 0, 133, 203, this.x, this.y, this.w, this.h);
            if (char_frame_switch_2 == 1) {
                char_frame_switch_2 = 0;
                setTimeout(function () {
                    if (char_frame_2 >= 8) {
                        char_frame_2 = 0;
                        char_frame_switch_2 = 1;
                    } else {
                        char_frame_2++;
                        char_frame_switch_2 = 1;

                    }
                }, 71);
            }
        } else {
            c.beginPath();
            c.drawImage(char_sprite_still, char_frame * 133, 0, 133, 203, this.x, this.y, this.w, this.h);
            if (char_frame_switch == 1) {
                char_frame_switch = 0;
                setTimeout(function () {
                    if (char_frame >= 1) {
                        char_frame = 0;
                        char_frame_switch = 1;
                    } else {
                        char_frame++;
                        char_frame_switch = 1;

                    }
                }, 300);
            }
        }

}
    this.update=function(key_pressed){
        
       
        
        
        switch(key_pressed)
        {
            case "d":
                if ((this.x < canvas.width -this.w - t -this.v ) && !((this.x > 7 * t -this.v - this.w && this.y > 0 && this.y < t) || (this.x > 7 * t -this.v - this.w && this.y+this.w > 10 * t && this.y < 11 * t))) {
                    this.x += this.v;
                } else if (this.y > 5 * t && this.y < 6 * t - this.h  && enemyArray.length==0 && currentRoom[5][12] != 'w') {
                    this.x += this.v;
                }
                break;
            case "a":
                if((this.x > t + this.v) && !((this.x < 6 * t +this.v  && this.y > 0 && this.y < t) || (this.x < 6 * t +this.v && this.y+this.w > 10 * t && this.y < 11 * t)))
                    {
                        this.x -= this.v;
                    }else if (this.y > 5*t && this.y <6*t-this.h && enemyArray.length==0 && currentRoom[5][0] != 'w')
                        {
                            this.x -= this.v;
                        }
                break;
            case "w":
                if((this.y > t+this.v)  && !((this.y <= 5 * t +this.v   && this.x > 0 && this.x < t) || (this.y <= 5 * t +this.v && this.x+this.w > 12 * t && this.x-this.w < 13 * t)))
                    {
                        this.y -= this.v;
                    }else if (this.x > 6*t && this.x <7*t-this.w && enemyArray.length==0 && currentRoom[0][6] != 'w')
                        {
                            this.y -= this.v;
                        }
                break;
            case "s":
                if((this.y < canvas.height-this.h-this.v-t)  && !((this.y > 6 * t -this.v - this.h && this.x > 0 && this.x < t) || (this.y > 6 * t -this.v - this.h && this.x+this.w > 12 * t && this.x < 13 * t)) )
                    {
                        this.y += this.v;
                    }else if (this.x > 6*t && this.x <7*t-this.w && enemyArray.length==0 && currentRoom[10][6] != 'w')
                        {
                            this.y += this.v;
                        }
                break;
                
        }
        
        c.closePath();
        
    }
    this.remove= function(){
       
        
    }
}

function Arma (x,y,v,w,h)
{
    this.x=caracter.x+caracter.w/2;
    this.y=caracter.y+caracter.h/2;
    this.v=v;
    this.w=w;
    this.h=h;
    this.angle=Math.atan(Math.abs(caracter.y+caracter.h-mouse.y)/Math.abs(caracter.x+caracter.w-mouse.x));
    this.angleRad=this.angle*(Math.PI/180);
    this.draw=function(){
        c.save();
        c.beginPath();
        c.fillStyle='darkblue';
        c.translate( this.x, this.y);
        c.rotate(this.angle);
        if(mouse.x<this.x)
            {
                c.scale(1, -1);
                c.drawImage(drawing,0,0,w,h);
                c.scale(1, -1);
            }else {c.drawImage(drawing,0,0,w,h);}
        
        c.restore();
    }
    
    this.update=function(){
        this.angle=Math.atan(Math.abs(caracter.y+caracter.h-mouse.y)/Math.abs(caracter.x+caracter.w-mouse.x));
        this.angleRad=this.angle*(Math.PI/180);
        if(this.x<mouse.x && this.y>mouse.y)
            {
                this.angle= -this.angle;
            }
        if(this.x>mouse.x && this.y>mouse.y)
            {
                this.angle+=Math.PI;
            }
        if(this.x>mouse.x && this.y<mouse.y)
            {
                this.angle=-(this.angle+Math.PI);
            }
        if(this.x<mouse.x && this.y<mouse.y)
            {
                this.angle=(this.angle);
            }
        
        this.x=caracter.x+caracter.w/2;
        this.y=caracter.y+caracter.h/2;
        
        }
        
}

var mouse = new Mouse ();
var caracter = new Caracter (1*t,1*t, 10.39/100*t, (69/100*t)*0.65517,(69/100*t));
var arma = new Arma (caracter.w/2, caracter.h/2, 10.39/100*t, 69/100*t,13.85/100*t);



// create some object to save all pressed keys
var keys = {
    w: false,
    a: false,
    s: false,
    d: false,
    clic: false
};

addEventListener("keydown", function(event) {
// save status of the button 'pressed' == 'true'
    if (event.keyCode == 87) {
        keys["w"] = true;
    }
    if (event.keyCode == 65) {
        keys["a"] = true;
    }
    if (event.keyCode == 83) {
        keys["s"] = true;
    }
    if (event.keyCode == 68) {
        keys["d"] = true;
    }
    
});

addEventListener("keyup", function(event) {
    if (event.keyCode == 87) {
        keys["w"] = false;
    }
    if (event.keyCode == 65) {
        keys["a"] = false;
    }
    if (event.keyCode == 83) {
        keys["s"] = false;
    }
    if (event.keyCode == 68) {
        keys["d"] = false;
    }
});

addEventListener('mousemove', function(event){
    mouse.x=event.clientX-(innerWidth-canvas.width)/2;
    mouse.y=event.clientY;
    arma.update();
})

var k=0;
addEventListener('mousedown', function(event){
    keys['clic'] = true;
})
addEventListener('mouseup', function(event){
    keys['clic'] = false;
})




console.log(wallArray.length);
newRoom(0,gamestate.mapPosX,gamestate.mapPosY);
function animation(){
    if(caracter.x<0)
        {
            console.log(1);
            gamestate.mapPosY--;
            loc_car_x=11;
            loc_car_y=5;
            newRoom(0,gamestate.mapPosX,gamestate.mapPosY);
            
        }
    if(caracter.y<0)
        {
            gamestate.mapPosX--;
            loc_car_x=6;
            loc_car_y=9;
            newRoom(0,gamestate.mapPosX,gamestate.mapPosY);
        }
    if(caracter.x>canvas.width)
        {
            gamestate.mapPosY++;
            loc_car_x=1;
            loc_car_y=5;
            newRoom(0,gamestate.mapPosX,gamestate.mapPosY);
        }
    if(caracter.y>canvas.height)
        {
            gamestate.mapPosX++;
            loc_car_x=6;
            loc_car_y=1;
            newRoom(0,gamestate.mapPosX,gamestate.mapPosY);
        }
    c.clearRect(0,0,innerWidth,innerHeight);  //clear screen
    if(caracter.hp>0)
        {
            caracter.draw();    //draw character
            arma.draw();    //draw weapon   
        }
    
    for(var i=0;i<=bulletArray.length-1;i++) //draw bullets
        {
            if(bulletArray[i] != undefined)
            {
                bulletArray[i].draw();
            }
        }
    for(var i=0;i<=enemyArray.length-1;i++) //draw enemies
        {
            if(enemyArray[i] != undefined)
            {
                
                enemyArray[i].draw();
            }
        }
    for (var i=0;i<=wallArray.length-1;i++)
    {
        wallArray[i].draw();
    }
    
    if(enemyArray.length!=0)
        {
            blockDoor[0]=new bDoor(6*t,0*t,t);
            blockDoor[1]=new bDoor(6*t,10*t,t);
            blockDoor[2]=new bDoor(0*t,5*t,t);
            blockDoor[3]=new bDoor(12*t,5*t,t);
        }

    if (enemyArray.length != 0) {
        if(currentRoom !== 'undefined')
            {
                
            
        if(currentRoom[0][6] != 'w')
            {
                blockDoor[0].draw();
            }
        if(currentRoom[10][6] != 'w')
            {
                blockDoor[1].draw();
            }
        if(currentRoom[5][0] != 'w')
            {
                blockDoor[2].draw();
            }
        if(currentRoom[5][12] != 'w')
            {
                blockDoor[3].draw();
            }
            }
    }
    console.log(gamestate.mapPosX,gamestate.mapPosY);
    requestAnimationFrame(animation);
    
    
     if (keys['w'] == true) {
        
        caracter.update('w');
        arma.update();
    }
    if (keys['a'] == true) {
        
        caracter.update('a');
        arma.update();
    }
    if (keys['s'] == true) {
        
        caracter.update('s');
        arma.update();
    }
    if (keys['d'] == true) {
        
        caracter.update('d');
        arma.update();
    }
    if (keys['clic'] == true) {
        if (firerate_timeout == 0) {
            bulletArray[k] = new Bullet(caracter.x+caracter.w/2, caracter.y+caracter.h/2, 13.85/100*t, 13.85/100*t, mouse.x, mouse.y);
            k++;
            firerate_timeout = 1;
            setTimeout(function () {
                firerate_timeout = 0;
            }, caracter.firerate);
        }
    }
   
    
    for(var i=0;i<=bulletArray.length-1;i++)  //make bullet move
        {
            if(bulletArray[i] != undefined)
            {
                bulletArray[i].update();
            }
        }
    for(var i=0;i<=enemyArray.length-1;i++)  //make enemy move
        {
            if(enemyArray[i] != undefined)
            {
                
                enemyArray[i].update();
            }
        }
    for (var i = 0; i <= bulletArray.length - 1; i++) { //check impact
        for (var j = 0; j <= enemyArray.length - 1; j++) {
            if (bulletArray[i] != undefined) {
                if (intersection(bulletArray[i].x, bulletArray[i].y, bulletArray[i].r, bulletArray[i].r, enemyArray[j].x, enemyArray[j].y, enemyArray[j].w, enemyArray[j].h)) {

                    bulletArray[i].remove();
                    enemyArray[j].hp--;

                }
            }
        }
    }
    for(var i=0;i<=enemyArray.length-1;i++) //check enemy hp
        {
            if(enemyArray[i].hp <= 0)
            {
                enemyArray[i].remove();
            }
        }
    
    if(caracter.hp<=0)  //check caracter hp
        {
            caracter.remove();
        }
    for(var j=0;j<=enemyArray.length-1;j++)
        {
            if(intersection(caracter.x, caracter.y, caracter.w, caracter.h, enemyArray[j].x, enemyArray[j].y, enemyArray[j].w, enemyArray[j].h))
                {
                    if(timeout==0)
                        {
                            caracter.hp--;
                            timeout=1;
                            console.log('a');
                            setTimeout(function(){timeout=0},caracter.invincibility);
                        }
                    
                }
        }
    
   
    
    }
animation();

    
    
console.log(t);
